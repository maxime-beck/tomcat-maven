kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: tomcat-prometheus
  labels:
    run: tomcat-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      run: tomcat-prometheus
  template:
    metadata:
      creationTimestamp: 
      labels:
        run: tomcat-prometheus
        k8s-app: tomcat-prometheus
    spec:
      containers:
      - name: tomcat-prometheus
        image: maxbeck/tomcat-prometheus
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 9090
          name: jmx
          protocol: TCP
        resources: {}
  strategy: {}
---
kind: Service
apiVersion: v1
metadata: 
 name: tomcat-prometheus
 labels: 
   run: tomcat-prometheus
   k8s-app: tomcat-prometheus
spec:
 ports: 
  - 
   protocol: TCP
   port: 80
   targetPort: 8080
 selector: 
   run: tomcat-prometheus
   k8s-app: tomcat-prometheus
status: 
 loadBalancer: 
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: tomcat-prometheus
  namespace: openshift-monitoring
  labels: 
    k8s-app: tomcat-prometheus
spec:
  endpoints: 
  - port: jmx
    interval: 10s
  namespaceSelector:
    matchNames:
    - tomcat-prometheus
  selector:
    matchLabels: 
      k8s-app: tomcat-prometheus
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    openshift.io/host.generated: 'true'
    prometheus.io/path: /metrics
    prometheus.io/port: "9090"
    prometheus.io/scrape: "true"
  labels:
    run: tomcat-prometheus
  name: tomcat-prometheus
  namespace: tomcat-prometheus
spec:
  host: tomcat-prometheus-tomcat-prometheus.router.default.svc.cluster.local
  to:
    kind: Service
    name: tomcat-prometheus
    weight: 100
  wildcardPolicy: None
status:
  ingress:
  - host: tomcat-prometheus-tomcat-prometheus.router.default.svc.cluster.local
    routerName: router
    wildcardPolicy: None